name: Gmail-RDP

on:
  workflow_dispatch:

jobs:
  setup-rdp-tunnel:
    runs-on: windows-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Download and Install Playit
      run: |
        Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/download/v0.15.26/playit-windows-x86_64-signed.exe" -OutFile "$env:USERPROFILE\playit.exe"
        Start-Sleep -Seconds 5

    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "p@ssw0rd!" -Force)

    - name: Show Public IP (RDP IP)
      run: |
        $publicIp = (Invoke-RestMethod -Uri "https://api.ipify.org?format=json").ip
        Write-Output "`n==== RDP Public IP ===="
        Write-Output "RDP IP: $publicIp:3389"

    - name: Start Playit and Show RDP Tunnel Info
      env:
        PLAYIT_AUTH_KEY: ${{ secrets.PL }}
      run: |
        cd $env:USERPROFILE
        echo "[[tunnels]]`nlocal_port = 3389`nproto = \"tcp\"" | Out-File -Encoding ascii playit.toml
        $output = .\playit.exe --config playit.toml --secret $env:PLAYIT_AUTH_KEY | Tee-Object -Variable output
        Write-Output "`n==== RDP Tunnel (Playit) ===="
        $rdpUrl = ($output | Select-String -Pattern "Tunnel is live at").Line
        Write-Output $rdpUrl

    - name: Keep the GitHub Action Runner Alive
      run: |
        while ($true) {
          Write-Output "Session is alive - $(Get-Date)"
          Start-Sleep -Seconds 300
        }

    - name: Trigger New Workflow Run
      if: always()
      env:
        REPO_PAT: ${{ secrets.REPO_PAT }}
      run: |
        $payload = @"
        {
          "ref": "main"
        }
        "@

        Invoke-RestMethod `
          -Method POST `
          -Uri "https://api.github.com/repos/${{ github.repository }}/actions/workflows/rdp.yml/dispatches" `
          -Headers @{
            Authorization = "token $env:REPO_PAT"
            Accept = "application/vnd.github.v3+json"
          } `
          -Body $payload
